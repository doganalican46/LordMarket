﻿@model LordMarket.Controllers.denemeController.SatisIslemViewModel1

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Barkodlu Satış</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

    <h2>Barkodlu Satış Ekranı</h2>

    <label>Barkod Girin:</label>
    <input type="text" id="barkodInput" placeholder="Barkod okutunuz" class="form-control" />

    <button onclick="barkodAra()">Ekle</button>

    <hr />

    <table border="1" id="urunListesi">
        <thead>
            <tr>
                <th>Ürün Adı</th>
                <th>Fiyat</th>
                <th>Adet</th>
                <th>Toplam</th>
                <th>İşlem</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <h3>Genel Toplam: <span id="toplamFiyat">0</span> ₺</h3>


    <br /> <br />

    <label>Ödeme Tipi:</label><br />
    <button type="button" class="odeme-btn active" data-tip="Nakit">Nakit</button>
    <button type="button" class="odeme-btn" data-tip="Kart">Kart</button>
    <button type="button" class="odeme-btn" data-tip="Veresiye">Veresiye</button>

    <input type="hidden" id="odemeTipi" value="Nakit" />  <!-- Seçilen ödeme tipini tutar -->
    <br /><br />

    <label for="musteriSelect">Müşteri Seçin:</label>
    <select id="musteriSelect" style="display:none;">
        <option value="">Müşteri Seçin</option>
        @foreach (var musteri in Model.Musteriler)
        {
            <option value="@musteri.ID">@musteri.MusteriAdSoyad</option>
        }
    </select>



    <br /><br />
    <button onclick="satisYap()">Satış Yap</button>
    <button onclick="temizle()">Temizle</button>
    <button onclick="temizle()">Satış İptal</button>




    <br /> <br />

    <h3>Hızlı Ürünler</h3>
    <div id="hizliUrunler" style="display: flex; flex-wrap: wrap; gap: 10px;">
        @foreach (var item in Model.HizliUrunler)
        {
            <button class="btn btn-warning"
                    onclick="hizliUrunEkle('@item.Barkod')"
                    style="min-width: 100px; margin:5px;">
                @item.UrunAd <br />
                @item.UrunFiyat ₺
            </button>
        }
    </div>



    <br /><br />
    <!-- Barkodsuz ürün için input ve buton -->
    <label>Diğer Ürün Fiyatı (₺):</label>
    <input type="number" id="digerUrunFiyat" placeholder="Fiyat girin" min="0" step="0.01" class="form-control" />
    <button onclick="digerUrunEkle()">Diğer Ürün Ekle</button>






    <script>
        var toplam = 0;
        var iskontoUygulandi = false;
        var iskontoOrani = 0;
        let digerUrunSayac = 0;  // global değişken



        function temizle() {
            // Ürün listesini temizle
            $('#urunListesi tbody').empty();

            // Genel toplamı sıfırla
            toplam = 0;
            $('#toplamFiyat').text("0");

            // Barkod inputu temizle ve focus yap
            $('#barkodInput').val('').focus();

            // Ödeme tipi sıfırla (ilk seçeneğe getir)
            $('#odemeTipi').val('Nakit');

            // Müşteri seçimini sıfırla (varsa)
            $('#musteriSelect').val('');
        }


        function updateGenelToplam() {
            let toplamYeni = 0;
            $('#urunListesi tbody tr').each(function () {
                let satirToplam = parseFloat($(this).find('.satirToplam').text());
                toplamYeni += satirToplam;
            });
            toplam = toplamYeni;
            $('#toplamFiyat').text(toplam.toFixed(2));
        }

        function barkodAra() {
            var barkod = $('#barkodInput').val();
            if (barkod.trim() === "") return;

            // Aynı barkoddan varsa sadece adet artır
            let mevcutSatir = $(`#urunListesi tbody tr[data-barkod='${barkod}']`);
            if (mevcutSatir.length > 0) {
                let adetCell = mevcutSatir.find('.adet');
                let yeniAdet = parseInt(adetCell.text()) + 1;
                adetCell.text(yeniAdet);

                let fiyat = parseFloat(mevcutSatir.find('.fiyat').text());
                mevcutSatir.find('.satirToplam').text((yeniAdet * fiyat).toFixed(2));

                updateGenelToplam();
                $('#barkodInput').val("").focus();
                return;
            }

            // Ajax ile ürün bilgisi al
            $.ajax({
                url: '/deneme/BarkodAra',
                type: 'POST',
                data: { barkod: barkod },
                success: function (res) {
                    if (res.success) {
                        let toplamSatir = res.fiyat;

                        $('#urunListesi tbody').append(
                            `<tr data-barkod="${barkod}">
                                                                                                <td>${res.urunAd}</td>
                                                                                                <td class="fiyat">${res.fiyat}</td>
                                                                                                <td class="adet">1</td>
                                                                                                <td class="satirToplam">${toplamSatir}</td>
                                                                                                <td>
                                                                                                    <button onclick="adetDegistir(this, 1)">+</button>
                                                                                                    <button onclick="adetDegistir(this, -1)">-</button>
                                                                                                    <button onclick="sil(this)">Sil</button>
                                                                                                </td>
                                                                                            </tr>`
                        );
                        updateGenelToplam();
                        $('#barkodInput').val("").focus();
                    } else {
                        alert("Ürün bulunamadı.");
                        $('#barkodInput').val("").focus();
                    }
                },
                error: function () {
                    alert("Bir hata oluştu.");
                }
            });
        }

        function adetDegistir(btn, degisim) {
            let satir = $(btn).closest('tr');
            let adetCell = satir.find('.adet');
            let adet = parseInt(adetCell.text());

            adet += degisim;
            if (adet < 1) return;

            adetCell.text(adet);

            let fiyat = parseFloat(satir.find('.fiyat').text());
            satir.find('.satirToplam').text((adet * fiyat).toFixed(2));

            updateGenelToplam();
        }

        function sil(btn) {
            $(btn).closest('tr').remove();
            updateGenelToplam();
        }

        // Enter tuşu ile ekleme
        $('#barkodInput').keypress(function (e) {
            if (e.which == 13) {
                barkodAra();
                e.preventDefault();
            }
        });

        function satisYap() {
            let odemeTipi = $('#odemeTipi').val();

            // toplam değerinin HTML'den geldiğini varsayıyorum, örneğin:
            let toplamText = $('#toplamTutar').text() || toplam; // toplam değişkenin tanımını görmek faydalı olurdu

            // Sayıya dönüştür (virgül varsa noktaya çevirerek)
            let toplamTutar = parseFloat(toplamText.toString().replace(",", "."));

            if (isNaN(toplamTutar)) {
                alert("Toplam tutar okunamadı. Lütfen tutarı kontrol edin.");
                return;
            }

            let urunlerText = '';
            let musteriID = odemeTipi === 'Veresiye' ? $('#musteriSelect').val() : null;

            // Ürün kontrolü
            let urunSatirlari = $('#urunListesi tbody tr');
            if (urunSatirlari.length === 0) {
                alert("Ürün listesi boş! Lütfen önce ürün ekleyin.");
                return;
            }

            // Veresiye için müşteri zorunlu
            if (odemeTipi === 'Veresiye' && (!musteriID || musteriID === "")) {
                alert("Veresiye satış için müşteri seçmelisiniz.");
                return;
            }

            // Ürün listesini hazırla
            urunSatirlari.each(function () {
                let urunAd = $(this).find('td:eq(0)').text();
                let adet = $(this).find('.adet').text();
                let fiyat = $(this).find('.fiyat').text();
                urunlerText += `${urunAd} - ${adet} Adet - ${fiyat}₺\n`;
            });

            $.ajax({
                url: '/deneme/SatisYap',
                type: 'POST',
                data: {
                    OdemeTipi: odemeTipi,
                    ToplamTutar: toplamTutar,
                    UrunListesi: urunlerText,
                    MusteriID: musteriID
                },
                success: function (res) {
                    if (res.success) {
                        alert("Satış tamamlandı!");
                        temizle();
                    } else {
                        alert("Hata: " + res.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert("Satış işlemi sırasında sistemsel bir hata oluştu.");
                    console.error("Hata Detayı:", xhr.responseText, status, error);
                }
            });
        }






        function hizliUrunEkle(barkod) {
            $('#barkodInput').val(barkod);
            barkodAra(); // doğru fonksiyon
        }




        $(document).ready(function () {
            $('#barkodInput').on('keypress', function (e) {
                if (e.which == 13) { // Enter tuşu (barkod okuyucular genelde bunu yollar)
                    e.preventDefault(); // Sayfanın yeniden yüklenmesini engelle
                    barkodEkle(); // Direkt ürünü ekle
                }
            });
        });

        $('#barkodInput').val('').focus();

        function digerUrunEkle() {
            let fiyatInput = $('#digerUrunFiyat');
            let fiyat = parseFloat(fiyatInput.val());

            if (isNaN(fiyat) || fiyat <= 0) {
                alert("Lütfen geçerli bir fiyat girin.");
                fiyatInput.focus();
                return;
            }

            digerUrunSayac++;  // sayaç artır

            let barkodDegeri = `digerUrun${digerUrunSayac}`;  // benzersiz barkod
            let urunAdi = digerUrunSayac === 1 ? "Diğer Ürün" : `Diğer Ürün ${digerUrunSayac}`;

            $('#urunListesi tbody').append(
                `<tr data-barkod="${barkodDegeri}">
                        <td>${urunAdi}</td>
                        <td class="fiyat">${fiyat.toFixed(2)}</td>
                        <td class="adet">1</td>
                        <td class="satirToplam">${fiyat.toFixed(2)}</td>
                        <td>
                            <button onclick="adetDegistir(this, 1)">+</button>
                            <button onclick="adetDegistir(this, -1)">-</button>
                            <button onclick="sil(this)">Sil</button>
                        </td>
                    </tr>`
            );

            updateGenelToplam();
            fiyatInput.val("").focus();
        }



        $('#odemeTipi').on('change', function () {
            if ($(this).val() === 'Veresiye') {
                $('#musteriSelect').show();
            } else {
                $('#musteriSelect').hide();
                $('#musteriSelect').val(''); // seçimi sıfırla
            }
        });



        $('.odeme-btn').click(function () {
            $('.odeme-btn').removeClass('active');
            $(this).addClass('active');

            let secilenTip = $(this).data('tip');
            $('#odemeTipi').val(secilenTip);

            // Buraya change event tetikle
            $('#odemeTipi').trigger('change');

            console.log("Seçilen Ödeme Tipi:", secilenTip);
        });



    </script>




</body>
</html>