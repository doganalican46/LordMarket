<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Giriş Yap | Lord Büfe&Market</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #f8f9fc;
            --accent-color: #2e59d9;
            --text-color: #5a5c69;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            font-family: 'Nunito', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            height: 100vh;
            overflow-x: hidden;
        }

        .login-container {
            max-width: 400px;
            width: 100%;
        }

        .login-card {
            border: none;
            border-radius: 1rem;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            overflow: hidden;
        }

        .login-header {
            background: var(--primary-color);
            color: white;
            padding: 1.5rem;
            text-align: center;
        }

        .login-body {
            padding: 2rem;
            background: white;
        }

        .form-control {
            padding: 0.75rem 1rem;
            border-radius: 0.35rem;
            border: 1px solid #d1d3e2;
        }

            .form-control:focus {
                border-color: #bac8f3;
                box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
            }

        .btn-login {
            background: var(--primary-color);
            border: none;
            padding: 0.75rem;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

            .btn-login:hover {
                background: var(--accent-color);
            }

        .input-group-text {
            background-color: #f8f9fc;
            border: 1px solid #d1d3e2;
            cursor: pointer;
        }

        .divider {
            position: relative;
            text-align: center;
            margin: 1.5rem 0;
        }

            .divider::before {
                content: "";
                position: absolute;
                top: 50%;
                left: 0;
                right: 0;
                height: 1px;
                background-color: #e3e6f0;
                z-index: 1;
            }

            .divider span {
                position: relative;
                z-index: 2;
                background-color: white;
                padding: 0 1rem;
                color: #b7b9cc;
                font-size: 0.85rem;
            }

        .link-primary {
            color: var(--primary-color);
            text-decoration: none;
        }

            .link-primary:hover {
                color: var(--accent-color);
                text-decoration: underline;
            }
    </style>
</head>
<body>
    <div class="container d-flex justify-content-center align-items-center min-vh-100">
        <div class="login-container">
            <div class="login-card">
                <div class="login-header">
                    <h2><i class="fas fa-code me-2"></i> Lord Büfe&Market</h2>
                    <p class="mb-0">Kullanıcı Giriş Paneli</p>
                </div>

                <div class="login-body">
                    <!-- Error Message -->
                    <div id="errorAlert" class="alert alert-danger d-none text-center fw-bold"></div>

                    <!-- Success Message -->
                    <div id="successAlert" class="alert alert-success d-none text-center fw-bold"></div>

                    @using (Html.BeginForm("Login", "Home", FormMethod.Post))
                    {
                        <div class="mb-3">
                            <label for="Username" class="form-label">Kullanıcı Adı veya E-Mail</label>
                            <input type="text" class="form-control" id="Username" name="Username" placeholder="Kullanıcı adı veya e-mail" required>
                        </div>

                        <div class="mb-3">
                            <label for="Password" class="form-label">Şifre</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="password" name="Password" placeholder="Şifreniz" required>
                                <span class="input-group-text" onclick="togglePassword()">
                                    <i class="fas fa-eye" id="eyeIcon"></i>
                                </span>
                            </div>
                        </div>

                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="rememberMe">
                            <label class="form-check-label" for="rememberMe">Beni Hatırla</label>
                        </div>

                        <button type="submit" class="btn btn-primary w-100 btn-login">Giriş Yap</button>
                    }
                    <br />
                    <a href="/Home/Index" class="btn btn-warning btn-sm">Satış Ekranına Dön</a>

                </div>
            </div>

        </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Toggle password visibility
        function togglePassword() {
            const passwordField = document.getElementById("password");
            const eyeIcon = document.getElementById("eyeIcon");

            if (passwordField.type === "password") {
                passwordField.type = "text";
                eyeIcon.classList.remove("fa-eye");
                eyeIcon.classList.add("fa-eye-slash");
            } else {
                passwordField.type = "password";
                eyeIcon.classList.remove("fa-eye-slash");
                eyeIcon.classList.add("fa-eye");
            }
        }

        // Handle form submission
        document.getElementById("loginForm").addEventListener("submit", function (e) {
            e.preventDefault();

            const Username = document.getElementById("Username").value;
            const password = document.getElementById("password").value;

            // Simple client-side validation
            if (!Username || !password) {
                showAlert("error", "Lütfen tüm alanları doldurunuz.");
                return;
            }

            // Simulate AJAX call to server
            // In a real application, you would use fetch or axios to send data to your backend
            console.log("Login attempt with:", { Username, password });

            // This is where you would normally make an AJAX call to your server
            // For demonstration, we'll simulate a successful login after 1 second
            setTimeout(() => {
                // In a real app, you would check the response from your server
                const isAdmin = Username.toLowerCase().includes("admin");

                if (Username && password) {
                    showAlert("success", "Giriş başarılı! Yönlendiriliyorsunuz...");

                    // Redirect to admin or user dashboard based on role
                    setTimeout(() => {
                        window.location.href = isAdmin ? "/Admin/Index" : "/User/Index";
                    }, 1500);
                } else {
                    showAlert("error", "Kullanıcı adı/email veya şifre hatalı!");
                }
            }, 1000);
        });

        // Show alert message
        function showAlert(type, message) {
            const errorAlert = document.getElementById("errorAlert");
            const successAlert = document.getElementById("successAlert");

            if (type === "error") {
                errorAlert.textContent = message;
                errorAlert.classList.remove("d-none");
                successAlert.classList.add("d-none");
            } else {
                successAlert.textContent = message;
                successAlert.classList.remove("d-none");
                errorAlert.classList.add("d-none");
            }

            // Auto-hide after 5 seconds
            setTimeout(() => {
                errorAlert.classList.add("d-none");
                successAlert.classList.add("d-none");
            }, 5000);
        }

        // Check for success message in URL (simulating TempData)
        window.onload = function () {
            const urlParams = new URLSearchParams(window.location.search);
            const successMessage = urlParams.get('success');
            const errorMessage = urlParams.get('error');

            if (successMessage) {
                showAlert("success", decodeURIComponent(successMessage));
            }

            if (errorMessage) {
                showAlert("error", decodeURIComponent(errorMessage));
            }
        };
    </script>
</body>
</html>