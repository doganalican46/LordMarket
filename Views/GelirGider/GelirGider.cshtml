﻿@model IEnumerable<LordMarket.Models.GelirGider>
@{
    ViewBag.Title = "Gelir Gider";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<h1 class="mt-2">GelirGider</h1>
<ol class="breadcrumb mb-4">
    <li class="breadcrumb-item active">GelirGider Listesi</li>
</ol>

<div class="card shadow-sm border-light rounded " style="max-width: 80%; margin: 20px auto;">
    <div class="card-header bg-dark text-white text-center">
        <h3><b>GelirGider</b></h3>
    </div>

    <div class="mt-3 mb-1 d-flex justify-content-end">
        <div class="btn-group me-2">
            <button id="exportExcel" class="btn btn-success me-3" title="Excel'e aktar">
                <i class="fas fa-file-excel"></i>
            </button>

            <button id="exportPDF" class="btn btn-danger" title="PDF'e çevir">
                <i class="fas fa-file-pdf"></i>
            </button>
        </div>

        <div class="input-group" style="width: 300px;">
            <span class="input-group-text"><i class="fas fa-search"></i></span>
            <input type="text" id="searchInput" class="form-control" placeholder="Ara...">
        </div>
    </div>

    <div class="card-body">
        <div class="table-responsive">
            <table id="DataTable" class="table table-hover text-center align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Tür</th>
                        <th>Tutar</th>
                        <th>Tarih</th>
                        <th>Process</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var GelirGider in Model)
                    {
                        <tr>

                            <td class="text-truncate" style="max-width: 150px;">@GelirGider.Tur</td>
                            <td class="text-truncate fw-bold @(GelirGider.Tur == "Gider" ? "text-danger" : "text-success")" style="max-width: 150px;">
                                @GelirGider.Tutar ₺
                            </td>
                            <td class="text-truncate" style="max-width: 150px;">@GelirGider.Tarih </td>


                            <td>
                                <div class="btn-group" role="group">
                                    <a href="/GelirGider/GelirGiderGetir/@GelirGider.ID" class="btn btn-sm btn-warning" title="Güncelle">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>

                                    <a href="/GelirGider/GelirGiderSil/@GelirGider.ID" class="btn btn-sm btn-danger" onclick="return confirm('GelirGideri silmek istediğinize emin misiniz?');" title="Sil">
                                        <i class="bi bi-trash"></i>
                                    </a>


                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="card-footer text-center">
        <a href="/GelirGider/YeniGelirGider/" class="btn btn-dark">Yeni GelirGider Ekle</a>
    </div>
</div>

<script>
    document.getElementById('exportExcel').addEventListener('click', function () {
        let table = document.getElementById('DataTable');
        let wb = XLSX.utils.book_new();
        let ws = XLSX.utils.table_to_sheet(table);

        let wscols = [];
        let range = XLSX.utils.decode_range(ws['!ref']);

        for (let C = range.s.c; C <= range.e.c; C++) {
            let maxWidth = 10; // Minimum genişlik

            for (let R = range.s.r; R <= range.e.r; R++) {
                let cell_address = XLSX.utils.encode_cell({ r: R, c: C });
                let cell = ws[cell_address];

                if (cell && cell.v) {
                    let cellLength = cell.v.toString().length;
                    if (cellLength > maxWidth) {
                        maxWidth = cellLength + 2;
                    }
                }
            }
            wscols.push({ wch: maxWidth });
        }

        ws['!cols'] = wscols;
        XLSX.utils.book_append_sheet(wb, ws, "Contacts");
        XLSX.writeFile(wb, "GelirGiderListesiRaporExcel.xlsx");
    });



    document.getElementById('exportPDF').addEventListener('click', function () {
        const { jsPDF } = window.jspdf;
        let doc = new jsPDF();

        doc.setFontSize(16);
        doc.setFont('helvetica', 'bold');
        doc.text("AlleySoftware", 20, 20);

        doc.setFont('helvetica', 'normal');
        let table = document.getElementById('DataTable');
        let data = [];
        let headers = [];

        let headerCells = table.querySelectorAll("thead th");
        headerCells.forEach(header => headers.push(header.innerText.trim() || ''));
        data.push(headers);

        let rows = table.querySelectorAll("tbody tr");
        rows.forEach(row => {
            let rowData = [];
            let cells = row.querySelectorAll("td");
            cells.forEach(cell => rowData.push(cell.innerText.trim() || ''));
            data.push(rowData);
        });


        doc.autoTable({
            head: [headers],
            body: data.slice(1),
            theme: 'grid',
            styles: {
                font: 'helvetica',
                fontSize: 10,
                cellPadding: 3,
                halign: 'center',
                valign: 'middle',
                textColor: 0,
            },
            headStyles: {
                fillColor: [255, 255, 255],
                textColor: 0,
                fontStyle: 'bold'
            },
            bodyStyles: {
                lineWidth: 0.1,
                lineColor: [0, 0, 0],
                fillColor: [255, 255, 255]
            },
            margin: { top: 30, left: 10, right: 10, bottom: 10 }
        });

        doc.save("GelirGiderListesiRaporPDF.pdf");
    });
</script>

